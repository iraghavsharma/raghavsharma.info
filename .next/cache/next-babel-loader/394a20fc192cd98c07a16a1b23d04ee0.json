{"ast":null,"code":"var _jsxFileName = \"/Users/raghav/repos/raghavsharma.info/components/socialLinksTray.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport links from \"../assets/json/socialLinks.json\";\nimport AtomLink from \"./atoms/link\";\nimport AtomButton from \"./atoms/button\";\nimport { Component } from \"react\";\n\nclass SocialLinksTray extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n    this.toggleState = this.toggleState.bind(this);\n  }\n\n  toggleState() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  render() {\n    let link_list = links.map(links => {\n      return __jsx(AtomLink, _extends({\n        key: links.id\n      }, links, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    });\n\n    if (this.state.show) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: `social-links-tray link-for__social-overlay-tray`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, link_list), __jsx(AtomButton, {\n        name: \"Click me\",\n        onClick: this.toggleState,\n        id: \"social-overlay-tray__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    } else {\n      return __jsx(React.Fragment, null, __jsx(AtomButton, {\n        name: \"Click me\",\n        onClick: this.toggleState,\n        id: \"social-overlay-tray__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\n;\nexport default SocialLinksTray;","map":{"version":3,"sources":["/Users/raghav/repos/raghavsharma.info/components/socialLinksTray.js"],"names":["links","AtomLink","AtomButton","Component","SocialLinksTray","constructor","props","state","show","toggleState","bind","setState","render","link_list","map","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,iCAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACpCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AACDD,EAAAA,WAAW,GAAG;AACV,SAAKE,QAAL,CAAc;AACVH,MAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADR,KAAd;AAGH;;AAEDI,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAGb,KAAK,CAACc,GAAN,CAAWd,KAAD,IAAW;AACjC,aAAO,MAAC,QAAD;AAAU,QAAA,GAAG,EAChBA,KAAK,CAACe;AADH,SAGAf,KAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAMH,KAPe,CAAhB;;AAQA,QAAI,KAAKO,KAAL,CAAWC,IAAf,EAAqB;AACjB,aAAS,4BACL;AAAK,QAAA,SAAS,EAAK,iDAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsEK,SAAtE,CADK,EAEG,MAAC,UAAD;AAAY,QAAA,IAAI,EAAG,UAAnB;AAA8B,QAAA,OAAO,EAAI,KAAKJ,WAA9C;AAA2D,QAAA,EAAE,EAAG,6BAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,CAAT;AAKH,KAND,MAMO;AACH,aAAS,4BACL,MAAC,UAAD;AAAY,QAAA,IAAI,EAAG,UAAnB;AAA8B,QAAA,OAAO,EAAI,KAAKA,WAA9C;AAA2D,QAAA,EAAE,EAAG,6BAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAAT;AAIH;AACJ;;AAnCmC;;AAoCvC;AAED,eAAeL,eAAf","sourcesContent":["import links from \"../assets/json/socialLinks.json\"\nimport AtomLink from \"./atoms/link\"\nimport AtomButton from \"./atoms/button\"\nimport { Component } from \"react\";\n\nclass SocialLinksTray extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false\n        };\n        this.toggleState = this.toggleState.bind(this)\n    };\n    toggleState() {\n        this.setState({\n            show: !this.state.show\n        });\n    };\n\n    render() {\n        let link_list = links.map((links) => {\n            return <AtomLink key = {\n                links.id\n            } {\n                ...links\n            }\n            />\n        });\n        if (this.state.show) {\n            return ( <>\n                <div className = {`social-links-tray link-for__social-overlay-tray`}>{link_list}</div> \n                        <AtomButton name = \"Click me\" onClick = {this.toggleState} id = \"social-overlay-tray__button\" / >\n                </>\n            );\n        } else {\n            return ( <>\n                <AtomButton name = \"Click me\" onClick = {this.toggleState} id = \"social-overlay-tray__button\" / >\n                </>    \n            )\n        }\n    }\n};\n\nexport default SocialLinksTray;"]},"metadata":{},"sourceType":"module"}