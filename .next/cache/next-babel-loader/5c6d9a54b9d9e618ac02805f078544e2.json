{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/raghav/repos/raghavsharma.info/components/socialLinksTray.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport links from \"../assets/json/socialLinks.json\";\nimport AtomLink from \"./atoms/link\";\nimport AtomButton from \"./atoms/button\";\nimport { Component } from \"react\";\n\nvar SocialLinksTray =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SocialLinksTray, _Component);\n\n  function SocialLinksTray(props) {\n    var _this;\n\n    _classCallCheck(this, SocialLinksTray);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SocialLinksTray).call(this, props));\n    _this.state = {\n      show: false\n    };\n    _this.toggleState = _this.toggleState.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SocialLinksTray, [{\n    key: \"toggleState\",\n    value: function toggleState() {\n      this.setState = {\n        show: !state.show\n      };\n      console.log(this.state.show);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var link_list = links.map(function (links) {\n        return __jsx(AtomLink, _extends({\n          key: links.id\n        }, links, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }));\n      });\n\n      if (this.state.show) {} else {\n        return __jsx(React.Fragment, null, __jsx(AtomButton, {\n          name: \"Click me\",\n          onClick: this.toggleState,\n          id: \"social-overlay-tray__button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return SocialLinksTray;\n}(Component);\n\n;\nexport default SocialLinksTray;","map":{"version":3,"sources":["/Users/raghav/repos/raghavsharma.info/components/socialLinksTray.js"],"names":["links","AtomLink","AtomButton","Component","SocialLinksTray","props","state","show","toggleState","bind","setState","console","log","link_list","map","id"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,iCAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;IAEMC,e;;;;;AACE,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACX,yFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,UAAKC,WAAL,GAAiB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAjB;AALW;AAMlB;;;;kCACY;AACL,WAAKC,QAAL,GAAiB;AACTH,QAAAA,IAAI,EAAE,CAACD,KAAK,CAACC;AADJ,OAAjB;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,IAAvB;AACC;;;6BAED;AACA,UAAIM,SAAS,GAAGb,KAAK,CAACc,GAAN,CAAU,UAACd,KAAD,EAAW;AAC7B,eAAO,MAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,KAAK,CAACe;AAArB,WAA6Bf,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACH,OAFW,CAAhB;;AAGI,UAAG,KAAKM,KAAL,CAAWC,IAAd,EAAmB,CAElB,CAFD,MAGI;AACA,eACQ,4BACN,MAAC,UAAD;AAAY,UAAA,IAAI,EAAC,UAAjB;AAA4B,UAAA,OAAO,EAAE,KAAKC,WAA1C;AAAuD,UAAA,EAAE,EAAC,6BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADM,CADR;AAKH;AACZ;;;;EA7BqBL,S;;AA8B7B;AAED,eAAeC,eAAf","sourcesContent":["import links from \"../assets/json/socialLinks.json\"\nimport AtomLink from \"./atoms/link\" \nimport AtomButton from \"./atoms/button\"\nimport { Component } from \"react\";\n\nclass SocialLinksTray extends Component {\n        constructor(props) {\n                super(props);\n                this.state = {\n                  show: false\n                };\n                this.toggleState=this.toggleState.bind(this)\n        };\n        toggleState(){\n                this.setState = ({\n                        show: !state.show\n                });\n                console.log(this.state.show)\n                };\n        \n        render(){  \n                let link_list = links.map((links) => {\n                        return <AtomLink key={links.id} {...links} />\n                    });     \n                    if(this.state.show){   \n                \n                    }\n                    else{\n                        return (   \n                                <>\n                          <AtomButton name=\"Click me\" onClick={this.toggleState} id=\"social-overlay-tray__button\" />\n                                </>\n                                );\n                    }\n        }\n};\n\nexport default SocialLinksTray;"]},"metadata":{},"sourceType":"module"}