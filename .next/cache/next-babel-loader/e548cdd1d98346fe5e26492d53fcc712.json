{"ast":null,"code":"var _jsxFileName = \"/Users/raghav/repos/raghavsharma.info/components/socialLinksTray.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport links from \"../assets/json/socialLinks.json\";\nimport AtomLink from \"./atoms/link\";\nimport AtomButton from \"./atoms/button\";\nimport { Component } from \"react\";\n\nclass SocialLinksTray extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false\n    };\n    this.toggleState = this.toggleState.bind(this);\n  }\n\n  toggleState() {\n    this.setState({\n      show: !this.state.show\n    });\n    console.log(this.state.show);\n  }\n\n  render() {\n    let link_list = links.map(links => {\n      return __jsx(AtomLink, _extends({\n        key: links.id\n      }, links, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }));\n    });\n    console.log(this.state.show);\n\n    if (this.state.show) {\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: `social-links-tray link-for__social-overlay-tray`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, link_list), __jsx(AtomButton, {\n        name: \"Click me\",\n        onClick: this.toggleState,\n        id: \"social-overlay-tray__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    } else {\n      return __jsx(React.Fragment, null, __jsx(AtomButton, {\n        name: \"Click me\",\n        onClick: this.toggleState,\n        id: \"social-overlay-tray__button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\n;\nexport default SocialLinksTray;","map":{"version":3,"sources":["/Users/raghav/repos/raghavsharma.info/components/socialLinksTray.js"],"names":["links","AtomLink","AtomButton","Component","SocialLinksTray","constructor","props","state","show","toggleState","bind","setState","console","log","render","link_list","map","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,iCAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACX,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKC,WAAL,GAAiB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AACP;;AACDD,EAAAA,WAAW,GAAE;AACL,SAAKE,QAAL,CAAc;AAACH,MAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAnB,KAAd;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,IAAvB;AACC;;AAETM,EAAAA,MAAM,GAAE;AACA,QAAIC,SAAS,GAAGf,KAAK,CAACgB,GAAN,CAAWhB,KAAD,IAAW;AAC7B,aAAO,MAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,KAAK,CAACiB;AAArB,SAA6BjB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH,KAFW,CAAhB;AAGIY,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,IAAvB;;AACA,QAAG,KAAKD,KAAL,CAAWC,IAAd,EAAmB;AACf,aACC,4BACO;AAAK,QAAA,SAAS,EAAG,iDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoEO,SAApE,CADP,EAEO,MAAC,UAAD;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,OAAO,EAAE,KAAKN,WAA1C;AAAuD,QAAA,EAAE,EAAC,6BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFP,CADD;AAMH,KAPD,MAQI;AACA,aACA,4BACA,MAAC,UAAD;AAAY,QAAA,IAAI,EAAC,UAAjB;AAA4B,QAAA,OAAO,EAAE,KAAKA,WAA1C;AAAuD,QAAA,EAAE,EAAC,6BAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA;AAKH;AACZ;;AAjC+B;;AAkCvC;AAED,eAAeL,eAAf","sourcesContent":["import links from \"../assets/json/socialLinks.json\"\nimport AtomLink from \"./atoms/link\" \nimport AtomButton from \"./atoms/button\"\nimport { Component } from \"react\";\n\nclass SocialLinksTray extends Component {\n        constructor(props) {\n                super(props);\n                this.state = {\n                  show: false\n                };\n                this.toggleState=this.toggleState.bind(this)\n        };\n        toggleState(){\n                this.setState({show: !this.state.show});\n                console.log(this.state.show)\n                };\n        \n        render(){  \n                let link_list = links.map((links) => {\n                        return <AtomLink key={links.id} {...links} />\n                    });  \n                    console.log(this.state.show)   \n                    if(this.state.show){   \n                        return (   \n                         <>\n                                <div className={`social-links-tray link-for__social-overlay-tray`}>{link_list}</div>\n                                <AtomButton name=\"Click me\" onClick={this.toggleState} id=\"social-overlay-tray__button\" />\n                        </>\n                        );\n                    }\n                    else{\n                        return(\n                        <>\n                        <AtomButton name=\"Click me\" onClick={this.toggleState} id=\"social-overlay-tray__button\" />\n                        </>    \n                        )        \n                    }\n        }\n};\n\nexport default SocialLinksTray;"]},"metadata":{},"sourceType":"module"}