{"ast":null,"code":"var _jsxFileName = \"/Users/raghav/repos/raghavsharma.info/components/navLinks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport links from \"../assets/json/navlinks.json\";\nimport AtomLink from \"./atoms/link\";\n\nconst NavLinks = props => {\n  let list = props.for ? links[props.for] : links;\n  let link_list = list.map(list => {\n    if (list.type == \"link\") {\n      return __jsx(AtomLink, _extends({}, list, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }));\n    }\n    /*else if(list.type ==\"button\"){\n        <AtomButton {...list} />\n    }*/\n\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, link_list);\n};\n\nexport default NavLinks;","map":{"version":3,"sources":["/Users/raghav/repos/raghavsharma.info/components/navLinks.js"],"names":["links","AtomLink","NavLinks","props","list","for","link_list","map","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,8BAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,MAAIC,IAAI,GAAID,KAAK,CAACE,GAAP,GAAcL,KAAK,CAACG,KAAK,CAACE,GAAP,CAAnB,GAAgCL,KAA3C;AACA,MAAIM,SAAS,GAAGF,IAAI,CAACG,GAAL,CAAUH,IAAD,IAAU;AAC/B,QAAGA,IAAI,CAACI,IAAL,IAAa,MAAhB,EAAuB;AACnB,aAAO,MAAC,QAAD,eAAcJ,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;AACD;;;;AAGH,GAPe,CAAhB;AAQD,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAME,SAAN,CADL;AAGF,CAbD;;AAeA,eAAeJ,QAAf","sourcesContent":["import links from \"../assets/json/navlinks.json\"\nimport AtomLink from \"./atoms/link\" \n\nconst NavLinks = props => {\n    let list = (props.for) ? links[props.for]: links;\n    let link_list = list.map((list) => {\n        if(list.type == \"link\"){\n            return <AtomLink {...list} />\n        }\n        /*else if(list.type ==\"button\"){\n            <AtomButton {...list} />\n        }*/\n    });\n   return (\n        <div>{link_list}</div>\n   );\n}\n\nexport default NavLinks;"]},"metadata":{},"sourceType":"module"}