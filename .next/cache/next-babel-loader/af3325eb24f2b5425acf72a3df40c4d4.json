{"ast":null,"code":"var _jsxFileName = \"/Users/raghav/repos/raghavsharma.info/components/navLinks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport links from \"../assets/json/navlinks.json\";\n\nconst NavLinks = props => {\n  let list = props.for ? links[props.for] : links;\n  let link_list = list.map(list => {\n    if (list.type == \"link\") {\n      __jsx(AtomLink, _extends({}, list, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7\n        },\n        __self: this\n      }));\n    } else if (list.type == \"button\") {\n      __jsx(AtomButton, _extends({}, list, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }));\n    }\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"foobar\");\n};\n\nexport default NavLinks;","map":{"version":3,"sources":["/Users/raghav/repos/raghavsharma.info/components/navLinks.js"],"names":["links","NavLinks","props","list","for","link_list","map","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,8BAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,MAAIC,IAAI,GAAID,KAAK,CAACE,GAAP,GAAcJ,KAAK,CAACE,KAAK,CAACE,GAAP,CAAnB,GAAgCJ,KAA3C;AACA,MAAIK,SAAS,GAAGF,IAAI,CAACG,GAAL,CAAUH,IAAD,IAAU;AAC/B,QAAGA,IAAI,CAACI,IAAL,IAAa,MAAhB,EAAuB;AACnB,YAAC,QAAD,eAAcJ,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KAFD,MAGK,IAAGA,IAAI,CAACI,IAAL,IAAY,QAAf,EAAwB;AACzB,YAAC,UAAD,eAAgBJ,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH;AACJ,GAPe,CAAhB;AAQD,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAGF,CAbD;;AAeA,eAAeF,QAAf","sourcesContent":["import links from \"../assets/json/navlinks.json\"\n\nconst NavLinks = props => {\n    let list = (props.for) ? links[props.for]: links;\n    let link_list = list.map((list) => {\n        if(list.type == \"link\"){\n            <AtomLink {...list} />\n        }\n        else if(list.type ==\"button\"){\n            <AtomButton {...list} />\n        }\n    });\n   return (\n    <div>foobar</div>\n   );\n}\n\nexport default NavLinks;"]},"metadata":{},"sourceType":"module"}